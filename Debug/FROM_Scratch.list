
FROM_Scratch.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000818  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009b0  080009b8  000109b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009b0  080009b0  000109b8  2**0
                  CONTENTS
  4 .ARM          00000000  080009b0  080009b0  000109b8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009b0  080009b8  000109b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009b0  080009b0  000109b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009b4  080009b4  000109b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080009b8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080009b8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000109b8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a2e  00000000  00000000  000109e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002bd  00000000  00000000  00011416  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  000116d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011798  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001869  00000000  00000000  00011830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e12  00000000  00000000  00013099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005827  00000000  00000000  00013eab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000196d2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000240  00000000  00000000  00019724  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000998 	.word	0x08000998

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000998 	.word	0x08000998

080001d8 <GPIO_PerClkConstrol>:
 */

#include "stmf411re_diver_GPIO.h"


void GPIO_PerClkConstrol(GPIO_Reg_Def_t *pGPIOx, uint8_t En_Di){
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	460b      	mov	r3, r1
 80001e2:	70fb      	strb	r3, [r7, #3]
	if(En_Di==ENABLE)
 80001e4:	78fb      	ldrb	r3, [r7, #3]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d157      	bne.n	800029a <GPIO_PerClkConstrol+0xc2>
	{
		if(pGPIOx == GPIOA)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a5b      	ldr	r2, [pc, #364]	; (800035c <GPIO_PerClkConstrol+0x184>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d106      	bne.n	8000200 <GPIO_PerClkConstrol+0x28>
		{
			GPIOA_CLK_EN();
 80001f2:	4b5b      	ldr	r3, [pc, #364]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80001f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f6:	4a5a      	ldr	r2, [pc, #360]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80001f8:	f043 0301 	orr.w	r3, r3, #1
 80001fc:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_CLK_DI();
		}

	}
}
 80001fe:	e0a6      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOB)
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a58      	ldr	r2, [pc, #352]	; (8000364 <GPIO_PerClkConstrol+0x18c>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d106      	bne.n	8000216 <GPIO_PerClkConstrol+0x3e>
			GPIOB_CLK_EN();
 8000208:	4b55      	ldr	r3, [pc, #340]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020c:	4a54      	ldr	r2, [pc, #336]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800020e:	f043 0302 	orr.w	r3, r3, #2
 8000212:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000214:	e09b      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOC)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a53      	ldr	r2, [pc, #332]	; (8000368 <GPIO_PerClkConstrol+0x190>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PerClkConstrol+0x54>
			GPIOC_CLK_EN();
 800021e:	4b50      	ldr	r3, [pc, #320]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a4f      	ldr	r2, [pc, #316]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000224:	f043 0304 	orr.w	r3, r3, #4
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
}
 800022a:	e090      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOD)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a4f      	ldr	r2, [pc, #316]	; (800036c <GPIO_PerClkConstrol+0x194>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PerClkConstrol+0x6a>
			GPIOD_CLK_EN();
 8000234:	4b4a      	ldr	r3, [pc, #296]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a49      	ldr	r2, [pc, #292]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800023a:	f043 0308 	orr.w	r3, r3, #8
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e085      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOE)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a4a      	ldr	r2, [pc, #296]	; (8000370 <GPIO_PerClkConstrol+0x198>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PerClkConstrol+0x80>
			GPIOE_CLK_EN();
 800024a:	4b45      	ldr	r3, [pc, #276]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a44      	ldr	r2, [pc, #272]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000250:	f043 0310 	orr.w	r3, r3, #16
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e07a      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOF)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a46      	ldr	r2, [pc, #280]	; (8000374 <GPIO_PerClkConstrol+0x19c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d106      	bne.n	800026e <GPIO_PerClkConstrol+0x96>
			GPIOF_CLK_EN();
 8000260:	4b3f      	ldr	r3, [pc, #252]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a3e      	ldr	r2, [pc, #248]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000266:	f043 0320 	orr.w	r3, r3, #32
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	e06f      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOG)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a41      	ldr	r2, [pc, #260]	; (8000378 <GPIO_PerClkConstrol+0x1a0>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PerClkConstrol+0xac>
			GPIOG_CLK_EN();
 8000276:	4b3a      	ldr	r3, [pc, #232]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a39      	ldr	r2, [pc, #228]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800027c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000282:	e064      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOH)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a3d      	ldr	r2, [pc, #244]	; (800037c <GPIO_PerClkConstrol+0x1a4>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d160      	bne.n	800034e <GPIO_PerClkConstrol+0x176>
			GPIOH_CLK_EN();
 800028c:	4b34      	ldr	r3, [pc, #208]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a33      	ldr	r2, [pc, #204]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000292:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000296:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000298:	e059      	b.n	800034e <GPIO_PerClkConstrol+0x176>
	else if(En_Di==DISABLE)
 800029a:	78fb      	ldrb	r3, [r7, #3]
 800029c:	2b00      	cmp	r3, #0
 800029e:	d156      	bne.n	800034e <GPIO_PerClkConstrol+0x176>
		if(pGPIOx == GPIOA)
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a2e      	ldr	r2, [pc, #184]	; (800035c <GPIO_PerClkConstrol+0x184>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d106      	bne.n	80002b6 <GPIO_PerClkConstrol+0xde>
			GPIOA_CLK_DI();
 80002a8:	4b2d      	ldr	r3, [pc, #180]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ac:	4a2c      	ldr	r2, [pc, #176]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002ae:	f023 0301 	bic.w	r3, r3, #1
 80002b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b4:	e04b      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOB)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a2a      	ldr	r2, [pc, #168]	; (8000364 <GPIO_PerClkConstrol+0x18c>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_PerClkConstrol+0xf4>
			GPIOB_CLK_DI();
 80002be:	4b28      	ldr	r3, [pc, #160]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c2:	4a27      	ldr	r2, [pc, #156]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002c4:	f023 0302 	bic.w	r3, r3, #2
 80002c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ca:	e040      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOC)
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a26      	ldr	r2, [pc, #152]	; (8000368 <GPIO_PerClkConstrol+0x190>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_PerClkConstrol+0x10a>
			GPIOC_CLK_DI();
 80002d4:	4b22      	ldr	r3, [pc, #136]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d8:	4a21      	ldr	r2, [pc, #132]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002da:	f023 0304 	bic.w	r3, r3, #4
 80002de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e0:	e035      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOD)
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a21      	ldr	r2, [pc, #132]	; (800036c <GPIO_PerClkConstrol+0x194>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PerClkConstrol+0x120>
			GPIOD_CLK_DI();
 80002ea:	4b1d      	ldr	r3, [pc, #116]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a1c      	ldr	r2, [pc, #112]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 80002f0:	f023 0308 	bic.w	r3, r3, #8
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f6:	e02a      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOE)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a1d      	ldr	r2, [pc, #116]	; (8000370 <GPIO_PerClkConstrol+0x198>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PerClkConstrol+0x136>
			GPIOE_CLK_DI();
 8000300:	4b17      	ldr	r3, [pc, #92]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a16      	ldr	r2, [pc, #88]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000306:	f023 0310 	bic.w	r3, r3, #16
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e01f      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOF)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a18      	ldr	r2, [pc, #96]	; (8000374 <GPIO_PerClkConstrol+0x19c>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PerClkConstrol+0x14c>
			GPIOF_CLK_DI();
 8000316:	4b12      	ldr	r3, [pc, #72]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a11      	ldr	r2, [pc, #68]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800031c:	f023 0320 	bic.w	r3, r3, #32
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000322:	e014      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOG)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a14      	ldr	r2, [pc, #80]	; (8000378 <GPIO_PerClkConstrol+0x1a0>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PerClkConstrol+0x162>
			GPIOG_CLK_DI();
 800032c:	4b0c      	ldr	r3, [pc, #48]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a0b      	ldr	r2, [pc, #44]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000332:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e009      	b.n	800034e <GPIO_PerClkConstrol+0x176>
		else if(pGPIOx == GPIOH)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a0f      	ldr	r2, [pc, #60]	; (800037c <GPIO_PerClkConstrol+0x1a4>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d105      	bne.n	800034e <GPIO_PerClkConstrol+0x176>
			GPIOH_CLK_DI();
 8000342:	4b07      	ldr	r3, [pc, #28]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a06      	ldr	r2, [pc, #24]	; (8000360 <GPIO_PerClkConstrol+0x188>)
 8000348:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	bf00      	nop
 8000350:	370c      	adds	r7, #12
 8000352:	46bd      	mov	sp, r7
 8000354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000358:	4770      	bx	lr
 800035a:	bf00      	nop
 800035c:	40020000 	.word	0x40020000
 8000360:	40023800 	.word	0x40023800
 8000364:	40020400 	.word	0x40020400
 8000368:	40020800 	.word	0x40020800
 800036c:	40020c00 	.word	0x40020c00
 8000370:	40021000 	.word	0x40021000
 8000374:	40021400 	.word	0x40021400
 8000378:	40021800 	.word	0x40021800
 800037c:	40021c00 	.word	0x40021c00

08000380 <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000380:	b480      	push	{r7}
 8000382:	b087      	sub	sp, #28
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
	//MODE
	uint32_t temp=0;
 8000388:	2300      	movs	r3, #0
 800038a:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->pcnfgGPIOx.GPIO_PinMode <= GPIO_MODE_ANALOG) //no interrupt
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	795b      	ldrb	r3, [r3, #5]
 8000390:	2b03      	cmp	r3, #3
 8000392:	d820      	bhi.n	80003d6 <GPIO_Init+0x56>
	{
		temp= (pGPIOHandle->pcnfgGPIOx.GPIO_PinMode << (2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	795b      	ldrb	r3, [r3, #5]
 8000398:	461a      	mov	r2, r3
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	791b      	ldrb	r3, [r3, #4]
 800039e:	005b      	lsls	r3, r3, #1
 80003a0:	fa02 f303 	lsl.w	r3, r2, r3
 80003a4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= (~(0x3)<<(2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	681a      	ldr	r2, [r3, #0]
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	791b      	ldrb	r3, [r3, #4]
 80003b0:	005b      	lsls	r3, r3, #1
 80003b2:	f06f 0103 	mvn.w	r1, #3
 80003b6:	fa01 f303 	lsl.w	r3, r1, r3
 80003ba:	4619      	mov	r1, r3
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	400a      	ands	r2, r1
 80003c2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	6819      	ldr	r1, [r3, #0]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	697a      	ldr	r2, [r7, #20]
 80003d0:	430a      	orrs	r2, r1
 80003d2:	601a      	str	r2, [r3, #0]
 80003d4:	e0ec      	b.n	80005b0 <GPIO_Init+0x230>
	}
	else //interrupt mode
	{	//input mode
		pGPIOHandle->pGPIOx->MODER &= (~(0x3)<<(2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	681a      	ldr	r2, [r3, #0]
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	791b      	ldrb	r3, [r3, #4]
 80003e0:	005b      	lsls	r3, r3, #1
 80003e2:	f06f 0103 	mvn.w	r1, #3
 80003e6:	fa01 f303 	lsl.w	r3, r1, r3
 80003ea:	4619      	mov	r1, r3
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	400a      	ands	r2, r1
 80003f2:	601a      	str	r2, [r3, #0]
		if(pGPIOHandle->pcnfgGPIOx.GPIO_PinMode==GPIO_MODE_IT_FT)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	795b      	ldrb	r3, [r3, #5]
 80003f8:	2b04      	cmp	r3, #4
 80003fa:	d117      	bne.n	800042c <GPIO_Init+0xac>
		{
			//ftsr configuration
			EXTI->FTSR |=  (1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 80003fc:	4b4a      	ldr	r3, [pc, #296]	; (8000528 <GPIO_Init+0x1a8>)
 80003fe:	68db      	ldr	r3, [r3, #12]
 8000400:	687a      	ldr	r2, [r7, #4]
 8000402:	7912      	ldrb	r2, [r2, #4]
 8000404:	4611      	mov	r1, r2
 8000406:	2201      	movs	r2, #1
 8000408:	408a      	lsls	r2, r1
 800040a:	4611      	mov	r1, r2
 800040c:	4a46      	ldr	r2, [pc, #280]	; (8000528 <GPIO_Init+0x1a8>)
 800040e:	430b      	orrs	r3, r1
 8000410:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &=  ~(1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 8000412:	4b45      	ldr	r3, [pc, #276]	; (8000528 <GPIO_Init+0x1a8>)
 8000414:	689b      	ldr	r3, [r3, #8]
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	7912      	ldrb	r2, [r2, #4]
 800041a:	4611      	mov	r1, r2
 800041c:	2201      	movs	r2, #1
 800041e:	408a      	lsls	r2, r1
 8000420:	43d2      	mvns	r2, r2
 8000422:	4611      	mov	r1, r2
 8000424:	4a40      	ldr	r2, [pc, #256]	; (8000528 <GPIO_Init+0x1a8>)
 8000426:	400b      	ands	r3, r1
 8000428:	6093      	str	r3, [r2, #8]
 800042a:	e035      	b.n	8000498 <GPIO_Init+0x118>

		}
		else if(pGPIOHandle->pcnfgGPIOx.GPIO_PinMode==GPIO_MODE_IT_RT)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	795b      	ldrb	r3, [r3, #5]
 8000430:	2b05      	cmp	r3, #5
 8000432:	d117      	bne.n	8000464 <GPIO_Init+0xe4>
		{
			//configure rtsr
			EXTI->RTSR |=  (1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 8000434:	4b3c      	ldr	r3, [pc, #240]	; (8000528 <GPIO_Init+0x1a8>)
 8000436:	689b      	ldr	r3, [r3, #8]
 8000438:	687a      	ldr	r2, [r7, #4]
 800043a:	7912      	ldrb	r2, [r2, #4]
 800043c:	4611      	mov	r1, r2
 800043e:	2201      	movs	r2, #1
 8000440:	408a      	lsls	r2, r1
 8000442:	4611      	mov	r1, r2
 8000444:	4a38      	ldr	r2, [pc, #224]	; (8000528 <GPIO_Init+0x1a8>)
 8000446:	430b      	orrs	r3, r1
 8000448:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &=  ~(1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 800044a:	4b37      	ldr	r3, [pc, #220]	; (8000528 <GPIO_Init+0x1a8>)
 800044c:	68db      	ldr	r3, [r3, #12]
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	7912      	ldrb	r2, [r2, #4]
 8000452:	4611      	mov	r1, r2
 8000454:	2201      	movs	r2, #1
 8000456:	408a      	lsls	r2, r1
 8000458:	43d2      	mvns	r2, r2
 800045a:	4611      	mov	r1, r2
 800045c:	4a32      	ldr	r2, [pc, #200]	; (8000528 <GPIO_Init+0x1a8>)
 800045e:	400b      	ands	r3, r1
 8000460:	60d3      	str	r3, [r2, #12]
 8000462:	e019      	b.n	8000498 <GPIO_Init+0x118>

		}
		else if(pGPIOHandle->pcnfgGPIOx.GPIO_PinMode==GPIO_MODE_ITFTRT)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	795b      	ldrb	r3, [r3, #5]
 8000468:	2b06      	cmp	r3, #6
 800046a:	d115      	bne.n	8000498 <GPIO_Init+0x118>
		{
			EXTI->RTSR |=  (1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 800046c:	4b2e      	ldr	r3, [pc, #184]	; (8000528 <GPIO_Init+0x1a8>)
 800046e:	689b      	ldr	r3, [r3, #8]
 8000470:	687a      	ldr	r2, [r7, #4]
 8000472:	7912      	ldrb	r2, [r2, #4]
 8000474:	4611      	mov	r1, r2
 8000476:	2201      	movs	r2, #1
 8000478:	408a      	lsls	r2, r1
 800047a:	4611      	mov	r1, r2
 800047c:	4a2a      	ldr	r2, [pc, #168]	; (8000528 <GPIO_Init+0x1a8>)
 800047e:	430b      	orrs	r3, r1
 8000480:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |=  (1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 8000482:	4b29      	ldr	r3, [pc, #164]	; (8000528 <GPIO_Init+0x1a8>)
 8000484:	68db      	ldr	r3, [r3, #12]
 8000486:	687a      	ldr	r2, [r7, #4]
 8000488:	7912      	ldrb	r2, [r2, #4]
 800048a:	4611      	mov	r1, r2
 800048c:	2201      	movs	r2, #1
 800048e:	408a      	lsls	r2, r1
 8000490:	4611      	mov	r1, r2
 8000492:	4a25      	ldr	r2, [pc, #148]	; (8000528 <GPIO_Init+0x1a8>)
 8000494:	430b      	orrs	r3, r1
 8000496:	60d3      	str	r3, [r2, #12]

		}
	//configure GPIO port selection SYSCFG_EXTICR
		uint8_t temp1= pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber / 4;
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	791b      	ldrb	r3, [r3, #4]
 800049c:	089b      	lsrs	r3, r3, #2
 800049e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2= pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber % 4;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	f003 0303 	and.w	r3, r3, #3
 80004a8:	74bb      	strb	r3, [r7, #18]
		SYSCFG_CLK_EN();
 80004aa:	4b20      	ldr	r3, [pc, #128]	; (800052c <GPIO_Init+0x1ac>)
 80004ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004ae:	4a1f      	ldr	r2, [pc, #124]	; (800052c <GPIO_Init+0x1ac>)
 80004b0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004b4:	6453      	str	r3, [r2, #68]	; 0x44
		uint8_t num = GPIOx_TO_NUMBER(pGPIOHandle->pGPIOx);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	4a1d      	ldr	r2, [pc, #116]	; (8000530 <GPIO_Init+0x1b0>)
 80004bc:	4293      	cmp	r3, r2
 80004be:	d047      	beq.n	8000550 <GPIO_Init+0x1d0>
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	4a1b      	ldr	r2, [pc, #108]	; (8000534 <GPIO_Init+0x1b4>)
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d02b      	beq.n	8000522 <GPIO_Init+0x1a2>
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	4a1a      	ldr	r2, [pc, #104]	; (8000538 <GPIO_Init+0x1b8>)
 80004d0:	4293      	cmp	r3, r2
 80004d2:	d024      	beq.n	800051e <GPIO_Init+0x19e>
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	4a18      	ldr	r2, [pc, #96]	; (800053c <GPIO_Init+0x1bc>)
 80004da:	4293      	cmp	r3, r2
 80004dc:	d01d      	beq.n	800051a <GPIO_Init+0x19a>
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	4a17      	ldr	r2, [pc, #92]	; (8000540 <GPIO_Init+0x1c0>)
 80004e4:	4293      	cmp	r3, r2
 80004e6:	d016      	beq.n	8000516 <GPIO_Init+0x196>
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	4a15      	ldr	r2, [pc, #84]	; (8000544 <GPIO_Init+0x1c4>)
 80004ee:	4293      	cmp	r3, r2
 80004f0:	d00f      	beq.n	8000512 <GPIO_Init+0x192>
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	4a14      	ldr	r2, [pc, #80]	; (8000548 <GPIO_Init+0x1c8>)
 80004f8:	4293      	cmp	r3, r2
 80004fa:	d008      	beq.n	800050e <GPIO_Init+0x18e>
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	4a12      	ldr	r2, [pc, #72]	; (800054c <GPIO_Init+0x1cc>)
 8000502:	4293      	cmp	r3, r2
 8000504:	d101      	bne.n	800050a <GPIO_Init+0x18a>
 8000506:	2307      	movs	r3, #7
 8000508:	e023      	b.n	8000552 <GPIO_Init+0x1d2>
 800050a:	2300      	movs	r3, #0
 800050c:	e021      	b.n	8000552 <GPIO_Init+0x1d2>
 800050e:	2306      	movs	r3, #6
 8000510:	e01f      	b.n	8000552 <GPIO_Init+0x1d2>
 8000512:	2305      	movs	r3, #5
 8000514:	e01d      	b.n	8000552 <GPIO_Init+0x1d2>
 8000516:	2304      	movs	r3, #4
 8000518:	e01b      	b.n	8000552 <GPIO_Init+0x1d2>
 800051a:	2303      	movs	r3, #3
 800051c:	e019      	b.n	8000552 <GPIO_Init+0x1d2>
 800051e:	2302      	movs	r3, #2
 8000520:	e017      	b.n	8000552 <GPIO_Init+0x1d2>
 8000522:	2301      	movs	r3, #1
 8000524:	e015      	b.n	8000552 <GPIO_Init+0x1d2>
 8000526:	bf00      	nop
 8000528:	40013c00 	.word	0x40013c00
 800052c:	40023800 	.word	0x40023800
 8000530:	40020000 	.word	0x40020000
 8000534:	40020400 	.word	0x40020400
 8000538:	40020800 	.word	0x40020800
 800053c:	40020c00 	.word	0x40020c00
 8000540:	40021000 	.word	0x40021000
 8000544:	40021400 	.word	0x40021400
 8000548:	40021800 	.word	0x40021800
 800054c:	40021c00 	.word	0x40021c00
 8000550:	2300      	movs	r3, #0
 8000552:	747b      	strb	r3, [r7, #17]


		SYSCFG->EXTICR[temp1] &= ~(0xF << (4 * temp2));
 8000554:	4a66      	ldr	r2, [pc, #408]	; (80006f0 <GPIO_Init+0x370>)
 8000556:	7cfb      	ldrb	r3, [r7, #19]
 8000558:	3302      	adds	r3, #2
 800055a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800055e:	7cbb      	ldrb	r3, [r7, #18]
 8000560:	009b      	lsls	r3, r3, #2
 8000562:	210f      	movs	r1, #15
 8000564:	fa01 f303 	lsl.w	r3, r1, r3
 8000568:	43db      	mvns	r3, r3
 800056a:	4618      	mov	r0, r3
 800056c:	4960      	ldr	r1, [pc, #384]	; (80006f0 <GPIO_Init+0x370>)
 800056e:	7cfb      	ldrb	r3, [r7, #19]
 8000570:	4002      	ands	r2, r0
 8000572:	3302      	adds	r3, #2
 8000574:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SYSCFG->EXTICR[temp1] |= (num<< (4*temp2));
 8000578:	4a5d      	ldr	r2, [pc, #372]	; (80006f0 <GPIO_Init+0x370>)
 800057a:	7cfb      	ldrb	r3, [r7, #19]
 800057c:	3302      	adds	r3, #2
 800057e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000582:	7c79      	ldrb	r1, [r7, #17]
 8000584:	7cbb      	ldrb	r3, [r7, #18]
 8000586:	009b      	lsls	r3, r3, #2
 8000588:	fa01 f303 	lsl.w	r3, r1, r3
 800058c:	4618      	mov	r0, r3
 800058e:	4958      	ldr	r1, [pc, #352]	; (80006f0 <GPIO_Init+0x370>)
 8000590:	7cfb      	ldrb	r3, [r7, #19]
 8000592:	4302      	orrs	r2, r0
 8000594:	3302      	adds	r3, #2
 8000596:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


	//enable exti interrupt usin IMR
		EXTI->IMR |=  (1<< pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber);
 800059a:	4b56      	ldr	r3, [pc, #344]	; (80006f4 <GPIO_Init+0x374>)
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	687a      	ldr	r2, [r7, #4]
 80005a0:	7912      	ldrb	r2, [r2, #4]
 80005a2:	4611      	mov	r1, r2
 80005a4:	2201      	movs	r2, #1
 80005a6:	408a      	lsls	r2, r1
 80005a8:	4611      	mov	r1, r2
 80005aa:	4a52      	ldr	r2, [pc, #328]	; (80006f4 <GPIO_Init+0x374>)
 80005ac:	430b      	orrs	r3, r1
 80005ae:	6013      	str	r3, [r2, #0]

	}
	//SPEED
	temp=0;
 80005b0:	2300      	movs	r3, #0
 80005b2:	617b      	str	r3, [r7, #20]
	temp= (pGPIOHandle->pcnfgGPIOx.GPIO_PinSpeed << (2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	799b      	ldrb	r3, [r3, #6]
 80005b8:	461a      	mov	r2, r3
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	791b      	ldrb	r3, [r3, #4]
 80005be:	005b      	lsls	r3, r3, #1
 80005c0:	fa02 f303 	lsl.w	r3, r2, r3
 80005c4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEED &= (~(0x3)<<(2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	689a      	ldr	r2, [r3, #8]
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	005b      	lsls	r3, r3, #1
 80005d2:	f06f 0103 	mvn.w	r1, #3
 80005d6:	fa01 f303 	lsl.w	r3, r1, r3
 80005da:	4619      	mov	r1, r3
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	400a      	ands	r2, r1
 80005e2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEED |=temp;
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	6899      	ldr	r1, [r3, #8]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	697a      	ldr	r2, [r7, #20]
 80005f0:	430a      	orrs	r2, r1
 80005f2:	609a      	str	r2, [r3, #8]

	//PUPD
	temp=0;
 80005f4:	2300      	movs	r3, #0
 80005f6:	617b      	str	r3, [r7, #20]
	temp= (pGPIOHandle->pcnfgGPIOx.GPIO_PinPuPdControl << (2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	79db      	ldrb	r3, [r3, #7]
 80005fc:	461a      	mov	r2, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	791b      	ldrb	r3, [r3, #4]
 8000602:	005b      	lsls	r3, r3, #1
 8000604:	fa02 f303 	lsl.w	r3, r2, r3
 8000608:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= (~(0x3)<<(2*pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	68da      	ldr	r2, [r3, #12]
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	791b      	ldrb	r3, [r3, #4]
 8000614:	005b      	lsls	r3, r3, #1
 8000616:	f06f 0103 	mvn.w	r1, #3
 800061a:	fa01 f303 	lsl.w	r3, r1, r3
 800061e:	4619      	mov	r1, r3
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	400a      	ands	r2, r1
 8000626:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |=temp;
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	68d9      	ldr	r1, [r3, #12]
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	697a      	ldr	r2, [r7, #20]
 8000634:	430a      	orrs	r2, r1
 8000636:	60da      	str	r2, [r3, #12]

	//OPTYPE

	temp=0;
 8000638:	2300      	movs	r3, #0
 800063a:	617b      	str	r3, [r7, #20]
	temp= (pGPIOHandle->pcnfgGPIOx.GPIO_PinOPType << (pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	7a1b      	ldrb	r3, [r3, #8]
 8000640:	461a      	mov	r2, r3
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	791b      	ldrb	r3, [r3, #4]
 8000646:	fa02 f303 	lsl.w	r3, r2, r3
 800064a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= (~(0x1)<<(pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber));
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	685a      	ldr	r2, [r3, #4]
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	791b      	ldrb	r3, [r3, #4]
 8000656:	4619      	mov	r1, r3
 8000658:	f06f 0301 	mvn.w	r3, #1
 800065c:	408b      	lsls	r3, r1
 800065e:	4619      	mov	r1, r3
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	400a      	ands	r2, r1
 8000666:	605a      	str	r2, [r3, #4]

	pGPIOHandle->pGPIOx->OTYPER |=temp;
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	6859      	ldr	r1, [r3, #4]
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	697a      	ldr	r2, [r7, #20]
 8000674:	430a      	orrs	r2, r1
 8000676:	605a      	str	r2, [r3, #4]

	//ALTFUN

	if(pGPIOHandle->pcnfgGPIOx.GPIO_PinMode == GPIO_MODE_ALTFUN)
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	795b      	ldrb	r3, [r3, #5]
 800067c:	2b02      	cmp	r3, #2
 800067e:	d131      	bne.n	80006e4 <GPIO_Init+0x364>
	{
		uint32_t temp1,temp2;
		temp1= pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber/8;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	791b      	ldrb	r3, [r3, #4]
 8000684:	08db      	lsrs	r3, r3, #3
 8000686:	b2db      	uxtb	r3, r3
 8000688:	60fb      	str	r3, [r7, #12]
		temp2= pGPIOHandle->pcnfgGPIOx.GPIO_PinNumber%8;
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	791b      	ldrb	r3, [r3, #4]
 800068e:	f003 0307 	and.w	r3, r3, #7
 8000692:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &=( 0xF <<(4*temp2) );
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	68fa      	ldr	r2, [r7, #12]
 800069a:	3208      	adds	r2, #8
 800069c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006a0:	68bb      	ldr	r3, [r7, #8]
 80006a2:	009b      	lsls	r3, r3, #2
 80006a4:	210f      	movs	r1, #15
 80006a6:	fa01 f303 	lsl.w	r3, r1, r3
 80006aa:	4619      	mov	r1, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	4011      	ands	r1, r2
 80006b2:	68fa      	ldr	r2, [r7, #12]
 80006b4:	3208      	adds	r2, #8
 80006b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->pcnfgGPIOx.GPIO_PinAltFunMode << (4*temp2));
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	68fa      	ldr	r2, [r7, #12]
 80006c0:	3208      	adds	r2, #8
 80006c2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	7a5b      	ldrb	r3, [r3, #9]
 80006ca:	4619      	mov	r1, r3
 80006cc:	68bb      	ldr	r3, [r7, #8]
 80006ce:	009b      	lsls	r3, r3, #2
 80006d0:	fa01 f303 	lsl.w	r3, r1, r3
 80006d4:	4619      	mov	r1, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	4311      	orrs	r1, r2
 80006dc:	68fa      	ldr	r2, [r7, #12]
 80006de:	3208      	adds	r2, #8
 80006e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80006e4:	bf00      	nop
 80006e6:	371c      	adds	r7, #28
 80006e8:	46bd      	mov	sp, r7
 80006ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ee:	4770      	bx	lr
 80006f0:	40013800 	.word	0x40013800
 80006f4:	40013c00 	.word	0x40013c00

080006f8 <GPIO_ToggleOutputPin>:

}


void GPIO_ToggleOutputPin(GPIO_Reg_Def_t *pGPIOx, uint8_t Pin_Num)
{
 80006f8:	b480      	push	{r7}
 80006fa:	b083      	sub	sp, #12
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
 8000700:	460b      	mov	r3, r1
 8000702:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<Pin_Num);
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	695b      	ldr	r3, [r3, #20]
 8000708:	78fa      	ldrb	r2, [r7, #3]
 800070a:	2101      	movs	r1, #1
 800070c:	fa01 f202 	lsl.w	r2, r1, r2
 8000710:	405a      	eors	r2, r3
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	615a      	str	r2, [r3, #20]
}
 8000716:	bf00      	nop
 8000718:	370c      	adds	r7, #12
 800071a:	46bd      	mov	sp, r7
 800071c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000720:	4770      	bx	lr
	...

08000724 <GPIO_IRQITConfig>:


void GPIO_IRQITConfig(uint8_t IRQNumber, uint8_t EnDi)
{
 8000724:	b480      	push	{r7}
 8000726:	b083      	sub	sp, #12
 8000728:	af00      	add	r7, sp, #0
 800072a:	4603      	mov	r3, r0
 800072c:	460a      	mov	r2, r1
 800072e:	71fb      	strb	r3, [r7, #7]
 8000730:	4613      	mov	r3, r2
 8000732:	71bb      	strb	r3, [r7, #6]
	if(EnDi==ENABLE)
 8000734:	79bb      	ldrb	r3, [r7, #6]
 8000736:	2b01      	cmp	r3, #1
 8000738:	d133      	bne.n	80007a2 <GPIO_IRQITConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800073a:	79fb      	ldrb	r3, [r7, #7]
 800073c:	2b1f      	cmp	r3, #31
 800073e:	d80a      	bhi.n	8000756 <GPIO_IRQITConfig+0x32>
		{
			//iser0
			*NVIC_ISER0 |= (1<< IRQNumber);
 8000740:	4b36      	ldr	r3, [pc, #216]	; (800081c <GPIO_IRQITConfig+0xf8>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	79fa      	ldrb	r2, [r7, #7]
 8000746:	2101      	movs	r1, #1
 8000748:	fa01 f202 	lsl.w	r2, r1, r2
 800074c:	4611      	mov	r1, r2
 800074e:	4a33      	ldr	r2, [pc, #204]	; (800081c <GPIO_IRQITConfig+0xf8>)
 8000750:	430b      	orrs	r3, r1
 8000752:	6013      	str	r3, [r2, #0]
		else if(IRQNumber >63 && IRQNumber<=97)
		{
			*NVIC_ICER2 |= (1<< (IRQNumber %64));
		}
	}
}
 8000754:	e05c      	b.n	8000810 <GPIO_IRQITConfig+0xec>
		else if(IRQNumber >31 && IRQNumber<=63)
 8000756:	79fb      	ldrb	r3, [r7, #7]
 8000758:	2b1f      	cmp	r3, #31
 800075a:	d90f      	bls.n	800077c <GPIO_IRQITConfig+0x58>
 800075c:	79fb      	ldrb	r3, [r7, #7]
 800075e:	2b3f      	cmp	r3, #63	; 0x3f
 8000760:	d80c      	bhi.n	800077c <GPIO_IRQITConfig+0x58>
			*NVIC_ISER1 |= (1<< (IRQNumber %32));
 8000762:	4b2f      	ldr	r3, [pc, #188]	; (8000820 <GPIO_IRQITConfig+0xfc>)
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	79fa      	ldrb	r2, [r7, #7]
 8000768:	f002 021f 	and.w	r2, r2, #31
 800076c:	2101      	movs	r1, #1
 800076e:	fa01 f202 	lsl.w	r2, r1, r2
 8000772:	4611      	mov	r1, r2
 8000774:	4a2a      	ldr	r2, [pc, #168]	; (8000820 <GPIO_IRQITConfig+0xfc>)
 8000776:	430b      	orrs	r3, r1
 8000778:	6013      	str	r3, [r2, #0]
 800077a:	e049      	b.n	8000810 <GPIO_IRQITConfig+0xec>
		else if(IRQNumber >63 && IRQNumber<=97)
 800077c:	79fb      	ldrb	r3, [r7, #7]
 800077e:	2b3f      	cmp	r3, #63	; 0x3f
 8000780:	d946      	bls.n	8000810 <GPIO_IRQITConfig+0xec>
 8000782:	79fb      	ldrb	r3, [r7, #7]
 8000784:	2b61      	cmp	r3, #97	; 0x61
 8000786:	d843      	bhi.n	8000810 <GPIO_IRQITConfig+0xec>
			*NVIC_ISER2 |= (1<< (IRQNumber %64));
 8000788:	4b26      	ldr	r3, [pc, #152]	; (8000824 <GPIO_IRQITConfig+0x100>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	79fa      	ldrb	r2, [r7, #7]
 800078e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000792:	2101      	movs	r1, #1
 8000794:	fa01 f202 	lsl.w	r2, r1, r2
 8000798:	4611      	mov	r1, r2
 800079a:	4a22      	ldr	r2, [pc, #136]	; (8000824 <GPIO_IRQITConfig+0x100>)
 800079c:	430b      	orrs	r3, r1
 800079e:	6013      	str	r3, [r2, #0]
}
 80007a0:	e036      	b.n	8000810 <GPIO_IRQITConfig+0xec>
	else if(IRQNumber==DISABLE)
 80007a2:	79fb      	ldrb	r3, [r7, #7]
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d133      	bne.n	8000810 <GPIO_IRQITConfig+0xec>
		if(IRQNumber <= 31)
 80007a8:	79fb      	ldrb	r3, [r7, #7]
 80007aa:	2b1f      	cmp	r3, #31
 80007ac:	d80a      	bhi.n	80007c4 <GPIO_IRQITConfig+0xa0>
			*NVIC_ICER0 |= (1<< IRQNumber);
 80007ae:	4b1e      	ldr	r3, [pc, #120]	; (8000828 <GPIO_IRQITConfig+0x104>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	79fa      	ldrb	r2, [r7, #7]
 80007b4:	2101      	movs	r1, #1
 80007b6:	fa01 f202 	lsl.w	r2, r1, r2
 80007ba:	4611      	mov	r1, r2
 80007bc:	4a1a      	ldr	r2, [pc, #104]	; (8000828 <GPIO_IRQITConfig+0x104>)
 80007be:	430b      	orrs	r3, r1
 80007c0:	6013      	str	r3, [r2, #0]
}
 80007c2:	e025      	b.n	8000810 <GPIO_IRQITConfig+0xec>
		else if(IRQNumber >31 && IRQNumber<=63)
 80007c4:	79fb      	ldrb	r3, [r7, #7]
 80007c6:	2b1f      	cmp	r3, #31
 80007c8:	d90f      	bls.n	80007ea <GPIO_IRQITConfig+0xc6>
 80007ca:	79fb      	ldrb	r3, [r7, #7]
 80007cc:	2b3f      	cmp	r3, #63	; 0x3f
 80007ce:	d80c      	bhi.n	80007ea <GPIO_IRQITConfig+0xc6>
			*NVIC_ICER1 |= (1<< (IRQNumber %32));
 80007d0:	4b16      	ldr	r3, [pc, #88]	; (800082c <GPIO_IRQITConfig+0x108>)
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	79fa      	ldrb	r2, [r7, #7]
 80007d6:	f002 021f 	and.w	r2, r2, #31
 80007da:	2101      	movs	r1, #1
 80007dc:	fa01 f202 	lsl.w	r2, r1, r2
 80007e0:	4611      	mov	r1, r2
 80007e2:	4a12      	ldr	r2, [pc, #72]	; (800082c <GPIO_IRQITConfig+0x108>)
 80007e4:	430b      	orrs	r3, r1
 80007e6:	6013      	str	r3, [r2, #0]
 80007e8:	e012      	b.n	8000810 <GPIO_IRQITConfig+0xec>
		else if(IRQNumber >63 && IRQNumber<=97)
 80007ea:	79fb      	ldrb	r3, [r7, #7]
 80007ec:	2b3f      	cmp	r3, #63	; 0x3f
 80007ee:	d90f      	bls.n	8000810 <GPIO_IRQITConfig+0xec>
 80007f0:	79fb      	ldrb	r3, [r7, #7]
 80007f2:	2b61      	cmp	r3, #97	; 0x61
 80007f4:	d80c      	bhi.n	8000810 <GPIO_IRQITConfig+0xec>
			*NVIC_ICER2 |= (1<< (IRQNumber %64));
 80007f6:	4b0e      	ldr	r3, [pc, #56]	; (8000830 <GPIO_IRQITConfig+0x10c>)
 80007f8:	681b      	ldr	r3, [r3, #0]
 80007fa:	79fa      	ldrb	r2, [r7, #7]
 80007fc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000800:	2101      	movs	r1, #1
 8000802:	fa01 f202 	lsl.w	r2, r1, r2
 8000806:	4611      	mov	r1, r2
 8000808:	4a09      	ldr	r2, [pc, #36]	; (8000830 <GPIO_IRQITConfig+0x10c>)
 800080a:	430b      	orrs	r3, r1
 800080c:	6013      	str	r3, [r2, #0]
}
 800080e:	e7ff      	b.n	8000810 <GPIO_IRQITConfig+0xec>
 8000810:	bf00      	nop
 8000812:	370c      	adds	r7, #12
 8000814:	46bd      	mov	sp, r7
 8000816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800081a:	4770      	bx	lr
 800081c:	e000e100 	.word	0xe000e100
 8000820:	e000e104 	.word	0xe000e104
 8000824:	e000e108 	.word	0xe000e108
 8000828:	e000e180 	.word	0xe000e180
 800082c:	e000e184 	.word	0xe000e184
 8000830:	e000e188 	.word	0xe000e188

08000834 <GPIO_IRQHandling>:
}



void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	4603      	mov	r3, r0
 800083c:	71fb      	strb	r3, [r7, #7]
	//clear pending register exti
	if(EXTI->PR & (1<<PinNumber))
 800083e:	4b0c      	ldr	r3, [pc, #48]	; (8000870 <GPIO_IRQHandling+0x3c>)
 8000840:	695b      	ldr	r3, [r3, #20]
 8000842:	79fa      	ldrb	r2, [r7, #7]
 8000844:	2101      	movs	r1, #1
 8000846:	fa01 f202 	lsl.w	r2, r1, r2
 800084a:	4013      	ands	r3, r2
 800084c:	2b00      	cmp	r3, #0
 800084e:	d009      	beq.n	8000864 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1<<PinNumber);
 8000850:	4b07      	ldr	r3, [pc, #28]	; (8000870 <GPIO_IRQHandling+0x3c>)
 8000852:	695b      	ldr	r3, [r3, #20]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	2101      	movs	r1, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4611      	mov	r1, r2
 800085e:	4a04      	ldr	r2, [pc, #16]	; (8000870 <GPIO_IRQHandling+0x3c>)
 8000860:	430b      	orrs	r3, r1
 8000862:	6153      	str	r3, [r2, #20]
	}
}
 8000864:	bf00      	nop
 8000866:	370c      	adds	r7, #12
 8000868:	46bd      	mov	sp, r7
 800086a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800086e:	4770      	bx	lr
 8000870:	40013c00 	.word	0x40013c00

08000874 <main>:
#include "stmf411re_diver_GPIO.h"



int main(void)
{
 8000874:	b580      	push	{r7, lr}
 8000876:	b086      	sub	sp, #24
 8000878:	af00      	add	r7, sp, #0


	GPIO_PerClkConstrol(GPIOA, ENABLE);
 800087a:	2101      	movs	r1, #1
 800087c:	4816      	ldr	r0, [pc, #88]	; (80008d8 <main+0x64>)
 800087e:	f7ff fcab 	bl	80001d8 <GPIO_PerClkConstrol>
	GPIO_Handle_t led;

	led.pGPIOx=GPIOA;
 8000882:	4b15      	ldr	r3, [pc, #84]	; (80008d8 <main+0x64>)
 8000884:	60fb      	str	r3, [r7, #12]
	led.pcnfgGPIOx.GPIO_PinMode=GPIO_MODE_OUT;
 8000886:	2301      	movs	r3, #1
 8000888:	747b      	strb	r3, [r7, #17]
	led.pcnfgGPIOx.GPIO_PinNumber=5;
 800088a:	2305      	movs	r3, #5
 800088c:	743b      	strb	r3, [r7, #16]
	led.pcnfgGPIOx.GPIO_PinOPType=GPIO_OUT_TYPE_PP;
 800088e:	2300      	movs	r3, #0
 8000890:	753b      	strb	r3, [r7, #20]
	led.pcnfgGPIOx.GPIO_PinPuPdControl=GPIO_NO_PU_PD;
 8000892:	2300      	movs	r3, #0
 8000894:	74fb      	strb	r3, [r7, #19]
	led.pcnfgGPIOx.GPIO_PinSpeed=GPIO_OUT_SPEED_HIGH;
 8000896:	2303      	movs	r3, #3
 8000898:	74bb      	strb	r3, [r7, #18]
	GPIO_Init(&led);
 800089a:	f107 030c 	add.w	r3, r7, #12
 800089e:	4618      	mov	r0, r3
 80008a0:	f7ff fd6e 	bl	8000380 <GPIO_Init>

	GPIO_Handle_t button;
	GPIO_PerClkConstrol(GPIOC, ENABLE);
 80008a4:	2101      	movs	r1, #1
 80008a6:	480d      	ldr	r0, [pc, #52]	; (80008dc <main+0x68>)
 80008a8:	f7ff fc96 	bl	80001d8 <GPIO_PerClkConstrol>
	button.pGPIOx=GPIOC;
 80008ac:	4b0b      	ldr	r3, [pc, #44]	; (80008dc <main+0x68>)
 80008ae:	603b      	str	r3, [r7, #0]
	button.pcnfgGPIOx.GPIO_PinMode=GPIO_MODE_IT_FT;
 80008b0:	2304      	movs	r3, #4
 80008b2:	717b      	strb	r3, [r7, #5]
	button.pcnfgGPIOx.GPIO_PinNumber=13;
 80008b4:	230d      	movs	r3, #13
 80008b6:	713b      	strb	r3, [r7, #4]
	button.pcnfgGPIOx.GPIO_PinOPType=GPIO_OUT_TYPE_PP;
 80008b8:	2300      	movs	r3, #0
 80008ba:	723b      	strb	r3, [r7, #8]
	button.pcnfgGPIOx.GPIO_PinPuPdControl=GPIO_PU;
 80008bc:	2301      	movs	r3, #1
 80008be:	71fb      	strb	r3, [r7, #7]
	button.pcnfgGPIOx.GPIO_PinSpeed=GPIO_OUT_SPEED_HIGH;
 80008c0:	2303      	movs	r3, #3
 80008c2:	71bb      	strb	r3, [r7, #6]
	GPIO_Init(&button);
 80008c4:	463b      	mov	r3, r7
 80008c6:	4618      	mov	r0, r3
 80008c8:	f7ff fd5a 	bl	8000380 <GPIO_Init>

//	GPIO_WriteToOutputPin(GPIOA, 5, 1);
	GPIO_IRQITConfig(40, ENABLE);
 80008cc:	2101      	movs	r1, #1
 80008ce:	2028      	movs	r0, #40	; 0x28
 80008d0:	f7ff ff28 	bl	8000724 <GPIO_IRQITConfig>


//	GPIO_Init(pGPIOHandle);
//	GPIO_PerClkConstrol(GPIOA, ENABLE);
    /* Loop forever */
	for(;;);
 80008d4:	e7fe      	b.n	80008d4 <main+0x60>
 80008d6:	bf00      	nop
 80008d8:	40020000 	.word	0x40020000
 80008dc:	40020800 	.word	0x40020800

080008e0 <EXTI15_10_IRQHandler>:




void EXTI15_10_IRQHandler(void)
{
 80008e0:	b580      	push	{r7, lr}
 80008e2:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(13);
 80008e4:	200d      	movs	r0, #13
 80008e6:	f7ff ffa5 	bl	8000834 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, 5);
 80008ea:	2105      	movs	r1, #5
 80008ec:	4802      	ldr	r0, [pc, #8]	; (80008f8 <EXTI15_10_IRQHandler+0x18>)
 80008ee:	f7ff ff03 	bl	80006f8 <GPIO_ToggleOutputPin>
}
 80008f2:	bf00      	nop
 80008f4:	bd80      	pop	{r7, pc}
 80008f6:	bf00      	nop
 80008f8:	40020000 	.word	0x40020000

080008fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008fc:	480d      	ldr	r0, [pc, #52]	; (8000934 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008fe:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000900:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000904:	480c      	ldr	r0, [pc, #48]	; (8000938 <LoopForever+0x6>)
  ldr r1, =_edata
 8000906:	490d      	ldr	r1, [pc, #52]	; (800093c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000908:	4a0d      	ldr	r2, [pc, #52]	; (8000940 <LoopForever+0xe>)
  movs r3, #0
 800090a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800090c:	e002      	b.n	8000914 <LoopCopyDataInit>

0800090e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800090e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000910:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000912:	3304      	adds	r3, #4

08000914 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000914:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000916:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000918:	d3f9      	bcc.n	800090e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800091a:	4a0a      	ldr	r2, [pc, #40]	; (8000944 <LoopForever+0x12>)
  ldr r4, =_ebss
 800091c:	4c0a      	ldr	r4, [pc, #40]	; (8000948 <LoopForever+0x16>)
  movs r3, #0
 800091e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000920:	e001      	b.n	8000926 <LoopFillZerobss>

08000922 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000922:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000924:	3204      	adds	r2, #4

08000926 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000926:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000928:	d3fb      	bcc.n	8000922 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800092a:	f000 f811 	bl	8000950 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800092e:	f7ff ffa1 	bl	8000874 <main>

08000932 <LoopForever>:

LoopForever:
  b LoopForever
 8000932:	e7fe      	b.n	8000932 <LoopForever>
  ldr   r0, =_estack
 8000934:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000938:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800093c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000940:	080009b8 	.word	0x080009b8
  ldr r2, =_sbss
 8000944:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000948:	2000001c 	.word	0x2000001c

0800094c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800094c:	e7fe      	b.n	800094c <ADC_IRQHandler>
	...

08000950 <__libc_init_array>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	4d0d      	ldr	r5, [pc, #52]	; (8000988 <__libc_init_array+0x38>)
 8000954:	4c0d      	ldr	r4, [pc, #52]	; (800098c <__libc_init_array+0x3c>)
 8000956:	1b64      	subs	r4, r4, r5
 8000958:	10a4      	asrs	r4, r4, #2
 800095a:	2600      	movs	r6, #0
 800095c:	42a6      	cmp	r6, r4
 800095e:	d109      	bne.n	8000974 <__libc_init_array+0x24>
 8000960:	4d0b      	ldr	r5, [pc, #44]	; (8000990 <__libc_init_array+0x40>)
 8000962:	4c0c      	ldr	r4, [pc, #48]	; (8000994 <__libc_init_array+0x44>)
 8000964:	f000 f818 	bl	8000998 <_init>
 8000968:	1b64      	subs	r4, r4, r5
 800096a:	10a4      	asrs	r4, r4, #2
 800096c:	2600      	movs	r6, #0
 800096e:	42a6      	cmp	r6, r4
 8000970:	d105      	bne.n	800097e <__libc_init_array+0x2e>
 8000972:	bd70      	pop	{r4, r5, r6, pc}
 8000974:	f855 3b04 	ldr.w	r3, [r5], #4
 8000978:	4798      	blx	r3
 800097a:	3601      	adds	r6, #1
 800097c:	e7ee      	b.n	800095c <__libc_init_array+0xc>
 800097e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000982:	4798      	blx	r3
 8000984:	3601      	adds	r6, #1
 8000986:	e7f2      	b.n	800096e <__libc_init_array+0x1e>
 8000988:	080009b0 	.word	0x080009b0
 800098c:	080009b0 	.word	0x080009b0
 8000990:	080009b0 	.word	0x080009b0
 8000994:	080009b4 	.word	0x080009b4

08000998 <_init>:
 8000998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800099a:	bf00      	nop
 800099c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800099e:	bc08      	pop	{r3}
 80009a0:	469e      	mov	lr, r3
 80009a2:	4770      	bx	lr

080009a4 <_fini>:
 80009a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a6:	bf00      	nop
 80009a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009aa:	bc08      	pop	{r3}
 80009ac:	469e      	mov	lr, r3
 80009ae:	4770      	bx	lr
